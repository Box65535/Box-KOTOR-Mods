// box_inc_ai

// Written by Box
// Include file for AI


// Loose Grenades
int SPELL_FRAG_GRENADE = BOX_FRAG_GRENADE;
int SPELL_STUN_GRENADE = BOX_STUN_GRENADE;
int SPELL_ION_GRENADE = BOX_ION_GRENADE;
int SPELL_SONIC_GRENADE = BOX_SONIC_GRENADE;
int SPELL_COLD_GRENADE = BOX_COLD_GRENADE;
int SPELL_PLASMA_GRENADE = BOX_PLASMA_GRENADE;
int SPELL_THERMAL_DETONATOR = BOX_THERMAL_DETONATOR;

// Fueled Weapons
int SPELL_WEAK_SONIC_GRENADE = BOX_WEAK_SONIC_GRENADE;

// Energy and Non-Fueled Weapons
int SPELL_BURNERS = BOX_BURNERS;
int SPELL_WEAK_BURNERS = BOX_WEAK_BURNERS;
int SPELL_FIRE_SUPPRESSION = BOX_FIRE_SUPPRESSION;

// Force Power Attacks
int SPELL_FORCE_SWEEP = BOX_FORCE_SWEEP;
int SPELL_FORCE_IONIZE = BOX_FORCE_IONIZE;
int SPELL_FORCE_LEVITATE = BOX_FORCE_LEVITATE;
int SPELL_THROW_LIGHTSABER = BOX_THROW_LIGHTSABER;
int SPELL_FORCE_PUSH = BOX_FORCE_PUSH;
int SPELL_FORCE_BLIND = BOX_FORCE_BLIND;
int SPELL_FORCE_CONFUSION = BOX_FORCE_CONFUSION;
int SPELL_FORCE_QUAKE = BOX_FORCE_QUAKE;
int SPELL_ION_STORM = BOX_ION_STORM;
int SPELL_MASS_LEVITATE = BOX_MASS_LEVITATE;
int SPELL_FORCE_WAVE = BOX_FORCE_WAVE;
int SPELL_MASS_CONFUSION = BOX_MASS_CONFUSION;
int SPELL_FORCE_SLEEP = BOX_FORCE_SLEEP;
int SPELL_FORCE_SUPPRESS = BOX_FORCE_SUPPRESS;
int SPELL_FORCE_PARALYSIS = BOX_FORCE_PARALYSIS;
int SPELL_FORCE_LIGHT = BOX_FORCE_LIGHT;
int SPELL_FORCE_SEVER = BOX_FORCE_SEVER;
int SPELL_SLEEP_WAVE = BOX_SLEEP_WAVE;
int SPELL_PARALYSIS_WAVE = BOX_PARALYSIS_WAVE;
int SPELL_WALL_OF_LIGHT = BOX_WALL_OF_LIGHT;
int SPELL_FORCE_AFFLICT = BOX_FORCE_AFFLICT;
int SPELL_FORCE_FEAR = BOX_FORCE_FEAR;
int SPELL_FORCE_CHOKE = BOX_FORCE_CHOKE;
int SPELL_FORCE_DRAIN = BOX_FORCE_DRAIN;
int SPELL_FORCE_LIGHTNING = BOX_FORCE_LIGHTNING;
int SPELL_FORCE_CONSUME = BOX_FORCE_CONSUME;
int SPELL_FORCE_INSANITY = BOX_FORCE_INSANITY;
int SPELL_FORCE_CRUSH = BOX_FORCE_CRUSH;
int SPELL_DEATH_FIELD = BOX_DEATH_FIELD;
int SPELL_FORCE_STORM = BOX_FORCE_STORM;


int Box_GetHostility(object oUser) {
	return 0;
}

int Box_EstimateEnemyStrength(object oTarget) {
	return 0;
}

int Box_GetEnemyDistance(object oUser, object oTarget) {
}

// Shields
int SPELL_MINING_SHIELD = BOX_MINING_SHIELD;
int SPELL_ENERGY_SHIELD = BOX_ENERGY_SHIELD;
int SPELL_ENVIRONMENT_SHIELD = BOX_ENVIRONMENT_SHIELD;
int SPELL_SITH_SHIELD = BOX_SITH_SHIELD;
int SPELL_MANDALORIAN_SHIELD = BOX_MANDALORIAN_SHIELD;
int SPELL_ECHANI_SHIELD = BOX_ECHANI_SHIELD;
int SPELL_BAODUR_SHIELD = BOX_BAODUR_SHIELD;
int SPELL_DROID_ENERGY_SHIELD = BOX_DROID_ENERGY_SHIELD;
int SPELL_DROID_ENVIRONMENT_SHIELD = BOX_DROID_ENVIRONMENT_SHIELD;
int SPELL_RADIANT_SHIELD = BOX_RADIANT_SHIELD;
int SPELL_ADVANCED_SHIELD = BOX_ADVANCED_SHIELD;
int SPELL_UNIVERSAL_SHIELD = BOX_UNIVERSAL_SHIELD;
int SPELL_WEAK_MINING_SHIELD = BOX_WEAK_MINING_SHIELD;

//
int Box_GetHasShieldTalent(object oUser) {

	int result = 0;
	result += GetCreatureHasTalent(TalentSpell(SPELL_MINING_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_ENERGY_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_ENVIRONMENT_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_SITH_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_MANDALORIAN_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_ECHANI_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_BAODUR_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_DROID_ENERGY_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_DROID_ENVIRONMENT_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_RADIANT_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_ADVANCED_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_UNIVERSAL_SHIELD), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_WEAK_MINING_SHIELD), oUser);
	return result;
}

// Stims
int SPELL_STRENGTH_ADRENALINE = BOX_STRENGTH_ADRENALINE;
int SPELL_DEXTERITY_ADRENALINE = BOX_DEXTERITY_ADRENALINE;
int SPELL_CONSTITUTION_ADRENALINE = BOX_CONSTITUTION_ADRENALINE;
int SPELL_STRENGTH_STIMULANT = BOX_STRENGTH_STIMULANT;
int SPELL_DEXTERITY_STIMULANT = BOX_DEXTERITY_STIMULANT;
int SPELL_CONSTITUTION_STIMULANT = BOX_CONSTITUTION_STIMULANT;

//
int Box_GetHasStimTalent(object oUser) {

	int result = 0;
	result += GetCreatureHasTalent(TalentSpell(SPELL_STRENGTH_ADRENALINE), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_DEXTERITY_ADRENALINE), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_CONSTITUTION_ADRENALINE), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_STRENGTH_STIMULANT), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_DEXTERITY_STIMULANT), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_CONSTITUTION_STIMULANT), oUser);
	return result;
}

// Force Power Buffs
int SPELL_FORCE_SPEED = BOX_FORCE_SPEED;
int SPELL_FORCE_AGILITY = BOX_FORCE_AGILITY;
int SPELL_FORCE_VALOR = BOX_FORCE_VALOR;
int SPELL_FORCE_BODY = BOX_FORCE_BODY;
int SPELL_FORCE_ENLIGHTENMENT = BOX_FORCE_ENLIGHTENMENT;
int SPELL_FORCE_FURY = BOX_FORCE_FURY;
int SPELL_BATTLE_MEDITATION = BOX_BATTLE_MEDITATION;
int SPELL_MASTER_MEDITATION = BOX_MASTER_MEDITATION;

int Box_HasForcePowerBuff(object oUser) {
	
	int result = 0;
	result += GetCreatureHasTalent(TalentSpell(SPELL_FORCE_SPEED), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_FORCE_AGILITY), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_FORCE_VALOR), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_FORCE_BODY), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_FORCE_ENLIGHTENMENT), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_FORCE_FURY), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_BATTLE_MEDITATION), oUser);
	result += GetCreatureHasTalent(TalentSpell(SPELL_MASTER_MEDITATION), oUser);
	return result;
}


